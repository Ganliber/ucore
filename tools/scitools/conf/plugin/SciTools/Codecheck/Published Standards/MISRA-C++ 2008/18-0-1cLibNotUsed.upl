#This script is designed to run with Understand - CodeCheck
# Written by Kyle Jackson

# Boiler Plate code
use base ("Understand::Codecheck");
use strict;

# This is the error that will be returned when a violation is found
use constant ERR1 => 'C library included in file %1';

# This registers ERR1 with Understand
sub register_tr_text() {
  my $check = shift;
  $check->add_tr_text(ERR1);
}

# This is the short error the Understand will use
sub name { return "18-0-1 The C library shall not be used";}

# This is the full description of the rule being tested
sub description { return "18-0-1 (Required) The C library shall not be used.";}

# This section returns the rational and examples to be given to the user through Understand
sub detailed_description { return <<"END_DESC"
<p><b>Rationale</b>
Some C++ libraries (e.g. &lt;<i>cstdio</>&gt;) also have corresponding C versions (e.g. &lt;<i>stdio.h</i>&gt;). This rule
requires that the C++ version is used.
</pre>
END_DESC
}

# This section defines the programming language this script is testing
sub test_language {
  my $language = shift;
  return $language =~ /C\+\+/; #Handles C and C++
}

# This determines if this script is per file
sub test_entity { return 1;}

# This determines if this script is per project or per file
sub test_global { return 0;}

# Any defined options go here
sub define_options{}

# This is the actual test being performed on the user's code
sub check {
  # Pull the name of the check and the name of the file from the incoming script request
  my $check = shift; 
  my $file = shift;
  return unless $file->kind->check("c file ~unknown ~unresolved");
  
  # Check to see if any c library is used that has an updated C++ version
  foreach my $includes($file->filerefs("include","file")){
    if($includes->ent->name eq "assert.h" || $includes->ent->name eq "ctype.h" || $includes->ent->name eq "errno.h" ||
	   $includes->ent->name eq "float.h" || $includes->ent->name eq "iso646.h" || $includes->ent->name eq "limits.h" ||
	   $includes->ent->name eq "locale.h" || $includes->ent->name eq "math.h" || $includes->ent->name eq "setjmp.h" ||
	   $includes->ent->name eq "signal.h" || $includes->ent->name eq "stdarg.h" || $includes->ent->name eq "stdbool.h" ||
	   $includes->ent->name eq "stddef.h" || $includes->ent->name eq "stdint.h" || $includes->ent->name eq "stdio.h" ||
	   $includes->ent->name eq "stdlib.h" || $includes->ent->name eq "string.h" || $includes->ent->name eq "time.h" ||
	   $includes->ent->name eq "uchar.h" || $includes->ent->name eq "wchar.h" || $includes->ent->name eq "wctype.h"){
 	  $check->violation($includes->ent,$file,$includes->line,$includes->column,ERR1,$file->name);
 	}
  }
}
