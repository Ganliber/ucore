#This script is designed to run with Understand - CodeCheck
use base ("Understand::Codecheck");
use strict;


use constant ERR1 => 'Function %1 not declared at file scope';

sub register_tr_text() {
  my $check = shift;
  $check->add_tr_text(ERR1);
}

sub name { return "8.6 Functions shall be declared at file scope";}

sub description { return "8.6 (Required) Functions shall be declared at file scope";}

sub detailed_description { return <<"END_DESC"
Declaring functions at block scope may be confusing, and can lead to undefined behaviour.
END_DESC
}

sub test_language {
  my $language = shift;
  return $language =~ /C\+\+/; #Handles C and C++
}

sub test_entity { return 1;}

sub test_global { return 0;}

sub define_options{}

sub check {
  my $check = shift; 
  my $file = shift; 
  return unless $file->kind->check("c file ~unknown ~unresolved");
  my @refs = $file->filerefs("declare","function ~member");
  foreach my $ref (@refs){
    next unless($ref->scope != $file);
    $check->violation($ref->ent,$file,$ref->line,$ref->column,ERR1,$ref->ent->name); 
  }
}
