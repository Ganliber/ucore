#This script is designed to run with Understand - CodeCheck
# Written by Kyle Jackson

# Boiler Plate code
use base ("Understand::Codecheck");
use strict;

# This is the error that will be returned when a violation is found
use constant ERR1 => '<cstdio> included in file %1';

# This registers ERR1 with Understand
sub register_tr_text() {
  my $check = shift;
  $check->add_tr_text(ERR1);
}

# This is the short error the Understand will use
sub name { return "The stream input/output library <cstdio> shall not be used";}

# This is the full description of the rule being tested
sub description { return "The stream input/output library <cstdio> shall not be used.";}

# This section returns the rational and examples to be given to the user through Understand
sub detailed_description { return <<"END_DESC"
<p><b>Rationale</b>
This includes file and I/O functions <i>fgetpos</i>, <i>fopen</i>, <i>ftell</i>, <i>gets</i>, <i>perror</i>, <i>remove</i>, <i>rename</i>, etc.<p>
<p>Streams and file I/O have a large number of <i>unspecified</i>, <i>undefined</i> and <i>implementation-defined</i>
<i>behaviours</i> associated with them.
</p>
<b>Example</b><pre style="margin-top:0;padding-top:0;">
#include <cstdio> // Non-compliant
void fn ( )
{
  char_t array [ 10 ];
  gets ( array ); // Can lead to buffer over-run
}
</pre>
END_DESC
}

# This section defines the programming language this script is testing
sub test_language {
  my $language = shift;
  return $language =~ /C\+\+/; #Handles C and C++
}

# This determines if this script is per file
sub test_entity { return 1;}

# This determines if this script is per project or per file
sub test_global { return 0;}

# Any defined options go here
sub define_options{}

# This is the actual test being performed on the user's code
sub check {
  # Pull the name of the check and the name of the file from the incoming script request
  my $check = shift; 
  my $file = shift;
  return unless $file->kind->check("c file ~unknown ~unresolved");
  # Check to see if the banned cstdio library is included
  foreach my $includes($file->filerefs("include","file")){
    if($includes->ent->name eq "cstdio" || $includes->ent->name eq "stdio.h"){
 	  $check->violation($includes->ent,$file,$includes->line,$includes->column,ERR1,$file->name);
 	}
  }
}
